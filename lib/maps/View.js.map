{"version":3,"file":"../View.js","sourceRoot":"../../src","sources":["View.coffee"],"names":[],"mappings":"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","sourcesContent":["BaseView = require('parallelio').View\nDomUpdater = require('./DomUpdater')\nDisplay = require('./Display')\n\nmodule.exports = class View extends BaseView\n  @extend Display\n  constructor: (display = null) ->\n    super()\n    if display?\n      @display = display\n    @hovered = false\n    @keysInterval = {}\n    @baseCls = 'view'\n    @boundsStyles\n  @directionkeys = {\n    38: {name: 'top',    x: 0,  y: 1}\n    39: {name: 'right',  x: -1,  y: 0}\n    40: {name: 'bottom', x: 0,  y: -1}\n    37: {name: 'left',   x: 1, y: 0}\n  }\n  @properties\n    x:\n      default: 0\n      change: ->\n        @updateDisplayPos()\n    y:\n      default: 0\n      change: ->\n        @updateDisplayPos()\n    display:\n      calcul:(invalidator,original)->\n        display = original()\n        if $('.viewContent', display).length == 0\n          $(display).append('<div class=\"viewContent\"></div>')\n        $(display).mouseenter @callback('mouseEnter')\n        $(display).mouseleave @callback('mouseLeave')\n      change: ->\n        @updateDisplayPos()\n    contentDisplay:\n      calcul: ->\n        $('.viewContent', @display)\n    boundsStyles:\n      calcul: (invalidator)->\n        top: invalidator.prop('top',@bounds)*100 + '%'\n        left: invalidator.prop('left',@bounds)*100 + '%'\n        bottom: (1-invalidator.prop('bottom',@bounds))*100 + '%'\n        right: (1-invalidator.prop('right',@bounds))*100 + '%'\n      change: new DomUpdater callback: (old)->\n        @display.css(@boundsStyles)\n\n  setDefaults: ->\n    super()\n    unless @displayContainer?\n      @displayContainer = $('body')\n  mouseEnter: ->\n    @hovered = true\n    $('body').keydown( @callback('keyDown') )\n    $('body').keyup( @callback('keyUp') )\n  mouseLeave: ->\n    @hovered = false\n    $('body').off( 'keydown', @callback('keyDown') )\n    $('body').off( 'keyup', @callback('keyUp') )\n    for code, interval of @keysInterval\n      clearInterval(interval)\n  keyDown: (e) ->\n    if View.directionkeys[e.which]?\n      key = View.directionkeys[e.which]\n      clearInterval(@keysInterval[key.name]) if @keysInterval[key.name]?\n      @keysInterval[key.name] = setInterval =>\n        @x+= key.x * 2\n        @y+= key.y * 2\n      , 10\n  keyUp: (e) ->\n    if View.directionkeys[e.which]?\n      key = View.directionkeys[e.which]\n      clearInterval(@keysInterval[key.name]) if @keysInterval[key.name]?\n  updateDisplayPos: ->\n    $('.viewContent', @display).css(\n      left: @x+'px'\n      top: @y+'px'\n    )\n  containsPoint: (x, y) -> \n    container = @display[0]\n    while container\n      x -= container.offsetLeft;\n      y -= container.offsetTop;\n      container = container.offsetParent\n    0 <= x <= @display.width() and 0 <= y <= @display.height()\n"]}