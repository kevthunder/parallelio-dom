{"version":3,"file":"../Wire.js","sourceRoot":"../../src","sources":["Wire.coffee"],"names":[],"mappings":"AAAA,IAAA,QAAA,EAAA,UAAA,EAAA,KAAA,EAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,SAAR;;AACR,QAAA,GAAW,OAAA,CAAQ,YAAR,CAAqB,CAAC,MAAM,CAAC;;AACxC,UAAA,GAAa,OAAA,CAAQ,cAAR;;AAGb,MAAM,CAAC,OAAP,GAAuB;EAAN,MAAA,KAAA,QAAmB,SAAnB;IAEf,WAAa,CAAC,QAAD,CAAA;WACX,CAAM,QAAN;MACA,IAAC,CAAA,OAAD,GAAW;MACX,IAAC,CAAA;IAHU;;IAsBb,qBAAuB,CAAC,CAAD,CAAA;aACrB,MAAA,GAAS,CAAC,CAAC,IAAI,CAAC,MAAP,CAAc,CAAd,CAAgB,CAAC,WAAjB,CAAA,CAAT,GAA0C,CAAC,CAAC,IAAI,CAAC,KAAP,CAAa,CAAb;IADrB;;EAxBR;;EACf,IAAC,CAAA,MAAD,CAAQ,KAAR;;EAMA,IAAC,CAAA,UAAD,CACE;IAAA,OAAA,EACE;MAAA,MAAA,EAAQ,QAAA,CAAC,WAAD,EAAa,GAAb,CAAA;eACN,GAAA,CAAA;MADM;IAAR,CADF;IAGA,mBAAA,EACE;MAAA,MAAA,EAAQ,IAAI,UAAJ,CAAe;QAAA,QAAA,EAAU,QAAA,CAAC,GAAD,CAAA;UAC/B,IAAG,GAAH;YACE,GAAG,CAAC,OAAJ,CAAY,CAAC,CAAD,CAAA,GAAA;qBACV,IAAC,CAAA,OAAO,CAAC,WAAT,CAAqB,IAAC,CAAA,qBAAD,CAAuB,CAAvB,CAArB;YADU,CAAZ,EADF;;iBAGA,IAAC,CAAA,mBAAmB,CAAC,OAArB,CAA6B,CAAC,CAAD,CAAA,GAAA;mBAC3B,IAAC,CAAA,OAAO,CAAC,QAAT,CAAkB,IAAC,CAAA,qBAAD,CAAuB,CAAvB,CAAlB;UAD2B,CAA7B;QAJ+B;MAAV,CAAf;IAAR,CAJF;IAUA,QAAA,EACE;MAAA,MAAA,EAAQ,IAAI,UAAJ,CAAe;QAAA,QAAA,EAAU,QAAA,CAAC,GAAD,CAAA;UAC/B,IAAG,GAAH;YACE,IAAC,CAAA,OAAO,CAAC,WAAT,CAAqB,GAArB,EADF;;iBAEA,IAAC,CAAA,OAAO,CAAC,QAAT,CAAkB,IAAC,CAAA,QAAnB;QAH+B;MAAV,CAAf;IAAR;EAXF,CADF","sourcesContent":["Tiled = require('./Tiled')\nBaseWire = require('parallelio').wiring.Wire\nDomUpdater = require('./DomUpdater')\n\n\nmodule.exports = class Wire extends BaseWire\n  @extend Tiled\n  constructor: (wireType) ->\n    super(wireType)\n    @baseCls = 'wire'\n    @connectedDirections\n\n  @properties\n    display:\n      calcul: (invalidator,sup)->\n        sup()\n    connectedDirections:\n      change: new DomUpdater callback: (old)->\n        if old\n          old.forEach (d) =>\n            @display.removeClass @getClassFromDirection(d)\n        @connectedDirections.forEach (d) =>\n          @display.addClass @getClassFromDirection(d)\n    wireType:\n      change: new DomUpdater callback: (old)->\n        if old\n          @display.removeClass old\n        @display.addClass @wireType\n  \n  getClassFromDirection: (d) ->\n    'conn' + d.name.charAt(0).toUpperCase() + d.name.slice(1)"]}