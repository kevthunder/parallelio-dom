{"version":3,"file":"../Tile.js","sourceRoot":"../../src","sources":["Tile.coffee"],"names":[],"mappings":"AAAA,IAAA,SAAA,EAAA,QAAA,EAAA,OAAA,EAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,YAAR,CAAqB,CAAC,KAAK,CAAC;;AACvC,SAAA,GAAY,OAAA,CAAQ,YAAR,CAAqB,CAAC;;AAClC,OAAA,GAAU,OAAA,CAAQ,WAAR;;AAEV,MAAM,CAAC,OAAP,GAAuB;EAAN,MAAA,KAAA,QAAmB,SAAnB;IAGf,IAAM,CAAA,CAAA;WAAN,CAAA,IACE,CAAA;MACA,IAAC,CAAA,OAAD,GAAW;aACX,IAAC,CAAA,WAAD,CAAA;IAHI;;IAoBN,cAAgB,CAAC,CAAD,CAAA;aACd,CAAA,GAAE,IAAI,CAAC;IADO;;IAEhB,cAAgB,CAAC,CAAD,CAAA;aACd,CAAA,GAAE,IAAI,CAAC;IADO;;EAzBD;;EACf,IAAC,CAAA,MAAD,CAAQ,OAAR;;EACA,IAAC,CAAA,IAAD,GAAO;;EAMP,IAAC,CAAA,UAAD,CACE;IAAA,SAAA,EAAW,CAAA,CAAX;IACA,gBAAA,EACE;MAAA,MAAA,EAAQ,QAAA,CAAC,WAAD,CAAA;AACN,YAAA;QAAA,SAAA,GAAY,WAAW,CAAC,IAAZ,CAAiB,WAAjB;QACZ,wBAAG,SAAS,CAAE,WAAX,CAAuB,aAAvB,UAAH;iBACE,WAAW,CAAC,IAAZ,CAAiB,aAAjB,EAA+B,SAA/B,EADF;SAAA,MAEK,wBAAG,SAAS,CAAE,WAAX,CAAuB,SAAvB,UAAH;iBACH,WAAW,CAAC,IAAZ,CAAiB,SAAjB,EAA2B,SAA3B,EADG;;MAJC;IAAR,CAFF;IAQA,QAAA,EACE;MAAA,MAAA,EAAQ,QAAA,CAAC,WAAD,CAAA;eACN,IAAC,CAAA,cAAD,CAAgB,WAAW,CAAC,IAAZ,CAAiB,GAAjB,CAAhB;MADM;IAAR,CATF;IAWA,QAAA,EACE;MAAA,MAAA,EAAQ,QAAA,CAAC,WAAD,CAAA;eACN,IAAC,CAAA,cAAD,CAAgB,WAAW,CAAC,IAAZ,CAAiB,GAAjB,CAAhB;MADM;IAAR;EAZF,CADF;;;;;;AAoBI,IAAI,CAAC;EAAX,MAAA,MAAA,QAAyB,UAAzB;IAEE,IAAM,CAAA,CAAA;WAAN,CAAA,IACE,CAAA;MACA,IAAC,CAAA,OAAD,GAAW;aACX,IAAC,CAAA,GAAD,GAAO;IAHH;;EAFR;;EACE,KAAC,CAAA,MAAD,CAAQ,IAAR","sourcesContent":["BaseTile = require('parallelio').tiles.Tile\nBaseFloor = require('parallelio').Floor\nDisplay = require('./Display')\n\nmodule.exports = class Tile extends BaseTile\n  @extend Display\n  @size: 20\n  init: ->\n    super()\n    @baseCls = 'tile'\n    @initDisplay()\n\n  @properties\n    container: {}\n    displayContainer:\n      calcul: (invalidator) ->\n        container = invalidator.prop('container')\n        if container?.getProperty('tileDisplay')\n          invalidator.prop('tileDisplay',container)\n        else if container?.getProperty('display')\n          invalidator.prop('display',container)\n    displayX:\n      calcul: (invalidator) ->\n        @tileToDisplayX(invalidator.prop('x'))\n    displayY:\n      calcul: (invalidator) ->\n        @tileToDisplayY(invalidator.prop('y'))\n  tileToDisplayX: (x) ->\n    x*Tile.size\n  tileToDisplayY: (y) ->\n    y*Tile.size\n\nclass Tile.Floor extends BaseFloor\n  @extend Tile\n  init: ->\n    super()\n    @baseCls = 'tile'\n    @cls = 'floor'"]}